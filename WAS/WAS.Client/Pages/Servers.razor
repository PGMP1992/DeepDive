@page "/wasm/servers"
@using WAS.Client.Models

@rendermode InteractiveWebAssembly

@inject NavigationManager NavigationManager
@inject IServersRepos _APIRepos
@inject IJSRuntime _JS

<h3>Servers</h3>
<br />
<br />

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>City</th>
            <th>Status</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (listServers.Any())
        {
            foreach (var server in listServers)
            {
                @if (server is not null)
                {
                    <tr>
                        <td>@server.Name</td>
                        <td>@server.City</td>
                        <td>@(server.IsOnline ? "Online" : "Offline")</td>
                        <td><a class="btn btn-link" href="/wasm/servers/@server.Id">Edit</a></td>
                        <td><button class="btn btn-link" @onclick="@(()=> { Delete(server.Id); })">Delete</button></td>
                    </tr>
                }
            }
        }
    </tbody>
</table>
<br />
<a class="btn btn-primary" href="/wasm/servers/add">Add Server</a>

@code {
    public List<Server> listServers { get; set; } = new List<Server>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            listServers = await _APIRepos.GetAllAsync();
            StateHasChanged();
        }
    }

    private async Task Delete(int serverId)
    {
        await _APIRepos.DeleteAsync(serverId);
        listServers = await _APIRepos.GetAllAsync();
        StateHasChanged();
    }
}
